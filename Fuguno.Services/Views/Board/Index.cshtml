@{
    Layout = "..\\Shared\\_BoardLayout.cshtml";
    ViewBag.Title = "Index";
}

<script>
    var teamNames;
    var buildDefinitionNames;
</script>

<script type="text/template" id="iterationInfoTemplate">
    <h1><%= teamNames %> <%= formatString(Name, "-") %> <% print(EndDate.isBlank() ? "-" : moment().subtract("d", 1).from(EndDate, true) + "  left") %></h1>
    <span> </span>
    <span></span>
</script>

<script type="text/template" id="bugJailInfoTemplate">
    <img src="<%= ImageUrl %>" />
</script>

<script type="text/template" id="buildInfoTemplate">
    <li class="<%= Status %>">
        <h2 id="Name"><%= Name %> <%= formatString(Status, "") %> </h2>
        <p><%= formatString(BuildNumber, "-") %></p>
        <p></p>
        <p>Requested by <%= formatString(RequestedFor, "-") %></p>
        <p>Started <%= formatDate(StartTime, "-") %></p>
        <p>Finished <%= formatDate(FinishTime, "-") %></p>
        <p>Took <%= formatTime(ElapsedTime, "-") %></p>
        <p><%= getTestPassPercentage(TotalTestCount, TotalTestPassedCount) == null ? "No test data" : "Test pass rate of " + formatTestPassPercentage(getTestPassPercentage(TotalTestCount, TotalTestPassedCount)) %></p>
    </li>
</script>

<script type="text/template" id="workItemStatsTemplate_Narrow">
    <div>
        <h3><%= Heading %></h3>
        <div class="chart narrowChart"></div>
    </div>
</script>

<script type="text/template" id="workItemStatsTemplate_Wide">
    <div>
        <h3><%= Heading %></h3>
        <div class="chart wideChart"></div>
    </div>
</script>

<div id="body">
    <div id="wrap">
        <div id="header">
            <div id="iterationInfo"></div>
        </div>
        <div id="main">
            <div id="bugJailContainer">
                <h3>Bug Jail - active bugs</h3>
                <div id="bugJailInfoList"></div>
            </div>
            <div id="activeBugsContainer"></div>
            <div id="activeBugsByPeopleContainer"></div>
            <div id="resolvedBugsByPeopleContainer"></div>
        </div>
        <div id="sidebar">
            <div>
                <h3>Builds</h3>
                <ul id="buildInfoList"></ul>
            </div>
        </div>
    </div>
 </div>

<script>
    var iterationInfoView;
    var bugJailInfoListView;
    var buildInfoListView;
    var bugsByPriorityView;
    var activeBugsByAssignedToView;
    var resolvedBugsByAssignedToView;

    $(function() {
        if (isBoardConfigured() == false) {
            alert("Need to set config");
            return;
        }

        teamNames = getBoardConfigSetting(LocalStorageKey_TeamNames).split(",");
        buildDefinitionNames = getBoardConfigSetting(LocalStorageKey_BuildDefinitionNames).split(",");

        loadPage();

    })

    function loadPage() {
        iterationInfoView = new IterationInfoView({
            el: $("#iterationInfo"),
            model: new IterationInfoModel()
        });

        bugJailInfoListView = new BugJailInfoListView({
            el: $("#bugJailInfoList"),
            TeamName: teamNames
        });

        buildInfoListView = new BuildInfoListView({ el: $("#buildInfoList") });
        _.each(buildDefinitionNames, function (name) {
            buildInfoListView.addItem(name);
        });

        bugsByPriorityView = new WorkItemStatsView({
            templateId: "#workItemStatsTemplate_Narrow",
            el: $("#activeBugsContainer"),
            model: new WorkItemStatsModel({
                TeamName: teamNames,
                Heading: "Active bugs by priority",
                Action: "priority",
                WorkItemType: "Bug",
                State: "Active"
            })
        });

        activeBugsByAssignedToView = new WorkItemStatsView({
            templateId: "#workItemStatsTemplate_Wide",
            el: $("#activeBugsByPeopleContainer"),
            model: new WorkItemStatsModel({
                TeamName: teamNames,
                Heading: "Active bugs by people",
                Action: "assignedto",
                WorkItemType: "Bug",
                State: "Active"
            })
        });

        resolvedBugsByAssignedToView = new WorkItemStatsView({
            templateId: "#workItemStatsTemplate_Wide",
            el: $("#resolvedBugsByPeopleContainer"),
            model: new WorkItemStatsModel({
                TeamName: teamNames,
                Heading: "Resolved bugs by people",
                Action: "assignedto",
                WorkItemType: "Bug",
                State: "Resolved"
            })
        });

        refreshPage();
        window.setInterval(refreshPage, 60000);
    }

    function refreshPage() {
        iterationInfoView.model.fetch();
        bugJailInfoListView.fetchCollection();
        buildInfoListView.fetchModels();
        bugsByPriorityView.model.fetch();
        activeBugsByAssignedToView.model.fetch();
        resolvedBugsByAssignedToView.model.fetch();
    }

</script>
