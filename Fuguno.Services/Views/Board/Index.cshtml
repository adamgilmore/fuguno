@{
    Layout = "..\\Shared\\_BoardLayout.cshtml";
    ViewBag.Title = "Index";
}

<script>
    var TfsTeamNames = ["Content Infrastructure - UK", "Content Infrastructure - Metadata", "Ingest"]
    var TfsTeamName = "Content Infrastructure - UK";
    var TfsBuildDefitionNames = ["Cloud.Main.GC2", "Cloud.Main.Rolling", "Cloud.Main.CI", "Cloud.Main.Daily", "Cloud.Main.Manifest.Deployment.DevTest"];
</script>

<script type="text/template" id="iterationInfoTemplate">
    <h1><%= TfsTeamName %> <%= formatString(Name, "-") %> <% print(EndDate.isBlank() ? "-" : moment().subtract("d", 1).from(EndDate, true) + "  left") %></h1>
    <span> </span>
    <span></span>
</script>

<script type="text/template" id="bugJailInfoTemplate">
    <img src="<%= ImageUrl %>" />
</script>

<script type="text/template" id="buildInfoTemplate">
    <li class="<%= Status %>">
        <h2 id="Name"><%= Name %> <%= formatString(Status, "") %> </h2>
        <p><%= formatString(BuildNumber, "-") %></p>
        <p></p>
        <p>Requested by <%= formatString(RequestedFor, "-") %></p>
        <p>Started <%= formatDate(StartTime, "-") %></p>
        <p>Finished <%= formatDate(FinishTime, "-") %></p>
        <p>Took <%= formatTime(ElapsedTime, "-") %></p>
        <p><%= getTestPassPercentage(TotalTestCount, TotalTestPassedCount) == null ? "No test data" : "Test pass rate of " + formatTestPassPercentage(getTestPassPercentage(TotalTestCount, TotalTestPassedCount)) %></p>
    </li>
</script>

<script type="text/template" id="workItemStatsTemplate_Narrow">
    <div>
        <h3><%= Heading %></h3>
        <div class="chart narrowChart"></div>
    </div>
</script>

<script type="text/template" id="workItemStatsTemplate_Wide">
    <div>
        <h3><%= Heading %></h3>
        <div class="chart wideChart"></div>
    </div>
</script>

<script src="~/Scripts/jquery-2.0.3.js"></script>
<script src="~/Scripts/flot/jquery.flot.js"></script>
<script src="~/Scripts/flot/jquery.flot.stack.js"></script>
<script src="~/Scripts/underscore.js"></script>
<script src="~/Scripts/backbone.js"></script>
<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/sugar-full.development.js"></script>
<script src="~/Scripts/App/helpers.js"></script>
<script src="~/Scripts/App/buildinfo.js"></script>
<script src="~/Scripts/App/iterationinfo.js"></script>
<script src="~/Scripts/App/bugjailinfo.js"></script>
<script src="~/Scripts/App/workitemstats.js"></script>

<div id="body">
    <div id="wrap">
        <div id="header">
            <div id="iterationInfo"></div>
        </div>
        <div id="main">
            <div>
                <h3>Bug Jail - active bugs</h3>
                <div id="bugJailInfoList"></div>
            </div>
            <div id="chart1"></div>
            <div id="chart2"></div>
            <div id="chart3"></div>
        </div>
        <div id="sidebar">
            <h3>Builds</h3>
            <ul id="buildInfoList"></ul>
        </div>
    </div>

    <script>
        $(function() {
            var iterationInfoView;
            var bugJailInfoListView;
            var buildInfoListView;
            var bugsByPriorityView;
            var activeBugsByAssignedToView;
            var resolvedBugsByAssignedToView;

            loadPage();

            function loadPage() {
                iterationInfoView = new IterationInfoView({
                    el: $("#iterationInfo"),
                    model: new IterationInfoModel()
                });

                bugJailInfoListView = new BugJailInfoListView({
                    el: $("#bugJailInfoList"),
                    TeamName: TfsTeamName
                });

                buildInfoListView = new BuildInfoListView({ el: $("#buildInfoList") });
                _.each(TfsBuildDefitionNames, function (name) {
                    buildInfoListView.addItem(name);
                });

                bugsByPriorityView = new WorkItemStatsView({
                    templateId: "#workItemStatsTemplate_Narrow",
                    el: $("#chart1"),
                    model: new WorkItemStatsModel({
                        TeamName: TfsTeamName,
                        Heading: "Active bugs by priority",
                        Action: "priority",
                        WorkItemType: "Bug",
                        State: "Active"
                    })
                });

                activeBugsByAssignedToView = new WorkItemStatsView({
                    templateId: "#workItemStatsTemplate_Wide",
                    el: $("#chart2"),
                    model: new WorkItemStatsModel({
                        TeamName: TfsTeamName,
                        Heading: "Active bugs by people",
                        Action: "assignedto",
                        WorkItemType: "Bug",
                        State: "Active"
                    })
                });

                resolvedBugsByAssignedToView = new WorkItemStatsView({
                    templateId: "#workItemStatsTemplate_Wide",
                    el: $("#chart3"),
                    model: new WorkItemStatsModel({
                        TeamName: TfsTeamName,
                        Heading: "Resolved bugs by people",
                        Action: "assignedto",
                        WorkItemType: "Bug",
                        State: "Resolved"
                    })
                });

                refreshPage();
                window.setInterval(refreshPage, 60000);
            }

            function refreshPage() {
                iterationInfoView.model.fetch();
                bugJailInfoListView.fetchCollection();
                buildInfoListView.fetchModels();
                bugsByPriorityView.model.fetch();
                activeBugsByAssignedToView.model.fetch();
                resolvedBugsByAssignedToView.model.fetch();
            }
        })
    </script>
</div>